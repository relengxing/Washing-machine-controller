Component: ARM Compiler 5.06 update 1 (build 61) Tool: armlink [4d35a8]

==============================================================================

Section Cross References

    main.o(.text) refers to bsp_rtc.o(.text) for BSP_RTCSetTime
    main.o(.text) refers to app_para.o(.text) for GWPara_function
    main.o(.text) refers to bsp_led.o(.text) for Bsp_Led_SetH
    main.o(.text) refers to systick.o(.text) for Delay
    main.o(.text) refers to bsp_key.o(.text) for Bsp_Key_PinConfig
    main.o(.text) refers to em_cmu.o(.text) for CMU_ClockFreqGet
    main.o(.text) refers to bsp_test.o(.text) for Bsp_Test
    main.o(.text) refers to app_485rn.o(.text) for App_ManipulatorMain
    main.o(.text) refers to app_m6310.o(.text) for App_Gprs_Main
    main.o(.text) refers to em_emu.o(.text) for EMU_EnterEM2
    main.o(.text) refers to systick.o(.data) for SW_Version
    main.o(.text) refers to app_m6310.o(.data) for GPRS_Interval
    startup_efm32tg.o(RESET) refers to startup_efm32tg.o(STACK) for __initial_sp
    startup_efm32tg.o(RESET) refers to startup_efm32tg.o(.text) for Reset_Handler
    startup_efm32tg.o(RESET) refers to systick.o(.text) for SysTick_Handler
    startup_efm32tg.o(RESET) refers to em_dma.o(.text) for DMA_IRQHandler
    startup_efm32tg.o(RESET) refers to bsp_timer.o(.text) for TIMER0_IRQHandler
    startup_efm32tg.o(RESET) refers to bsp_uart.o(.text) for USART0_RX_IRQHandler
    startup_efm32tg.o(.text) refers to system_efm32tg.o(.text) for SystemInit
    startup_efm32tg.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    systick.o(.text) refers to em_assert.o(.text) for assertEFM
    systick.o(.text) refers to bsp_uart.o(.text) for SYS_UART_FSR
    systick.o(.text) refers to app_agr.o(.text) for App_Agr_Time_msCall
    systick.o(.text) refers to bsp_led.o(.text) for Bsp_Led_TimeCount
    systick.o(.text) refers to app_m6310.o(.text) for App_Gprs_Task_TimeCall
    systick.o(.text) refers to app_485rn.o(.text) for App_485_Task_TimeCall
    systick.o(.text) refers to bsp_rtc.o(.text) for BSP_RTCGetTime
    systick.o(.text) refers to systick.o(.data) for KeyTicks
    systick.o(.text) refers to bsp_rtc.o(.data) for BSP_Rtc_TimeCount
    system_efm32tg.o(.text) refers to system_efm32tg.o(.data) for SystemLFXOClock
    em_acmp.o(.text) refers to em_assert.o(.text) for assertEFM
    em_adc.o(.text) refers to em_assert.o(.text) for assertEFM
    em_adc.o(.text) refers to em_cmu.o(.text) for CMU_ClockFreqGet
    em_cmu.o(.text) refers to em_assert.o(.text) for assertEFM
    em_cmu.o(.text) refers to system_efm32tg.o(.text) for SystemHFClockGet
    em_cmu.o(.text) refers to em_emu.o(.text) for EMU_UpdateOscConfig
    em_dac.o(.text) refers to em_assert.o(.text) for assertEFM
    em_dac.o(.text) refers to em_cmu.o(.text) for CMU_ClockFreqGet
    em_dbg.o(.text) refers to em_assert.o(.text) for assertEFM
    em_dbg.o(.text) refers to em_cmu.o(.text) for CMU_OscillatorEnable
    em_dbg.o(.text) refers to em_gpio.o(.text) for GPIO_DbgLocationSet
    em_dma.o(.text) refers to em_assert.o(.text) for assertEFM
    em_dma.o(.text) refers to em_cmu.o(.text) for CMU_ClockEnable
    em_emu.o(.text) refers to system_efm32tg.o(.text) for SystemCoreClockGet
    em_emu.o(.text) refers to em_emu.o(.data) for cmuStatus
    em_gpio.o(.text) refers to em_assert.o(.text) for assertEFM
    em_i2c.o(.text) refers to em_cmu.o(.text) for CMU_ClockFreqGet
    em_i2c.o(.text) refers to em_assert.o(.text) for assertEFM
    em_i2c.o(.text) refers to em_i2c.o(.constdata) for i2cNSum
    em_i2c.o(.text) refers to em_i2c.o(.bss) for i2cTransfer
    em_lcd.o(.text) refers to em_assert.o(.text) for assertEFM
    em_letimer.o(.text) refers to em_assert.o(.text) for assertEFM
    em_leuart.o(.text) refers to em_assert.o(.text) for assertEFM
    em_leuart.o(.text) refers to em_cmu.o(.text) for CMU_ClockFreqGet
    em_msc.o(.text) refers to system_efm32tg.o(.text) for SystemCoreClockGet
    em_msc.o(.text) refers to em_cmu.o(.text) for CMU_ClockFreqGet
    em_msc.o(ram_code) refers to em_assert.o(.text) for assertEFM
    em_msc.o(ram_code) refers to system_efm32tg.o(.data) for SystemCoreClock
    em_msc.o(ram_code) refers to em_int.o(.data) for INT_LockCnt
    em_prs.o(.text) refers to em_assert.o(.text) for assertEFM
    em_rmu.o(.text) refers to em_rmu.o(.constdata) for resetCauseMasks
    em_rtc.o(.text) refers to em_assert.o(.text) for assertEFM
    em_system.o(.text) refers to em_assert.o(.text) for assertEFM
    em_timer.o(.text) refers to em_assert.o(.text) for assertEFM
    em_usart.o(.text) refers to em_assert.o(.text) for assertEFM
    em_usart.o(.text) refers to em_cmu.o(.text) for CMU_ClockFreqGet
    em_vcmp.o(.text) refers to em_assert.o(.text) for assertEFM
    bsp_acmp.o(.text) refers to memmovea.o(.text) for __aeabi_memcpy4
    bsp_acmp.o(.text) refers to bsp_power_ctrl.o(.text) for Bsp_Power_Operate
    bsp_acmp.o(.text) refers to em_cmu.o(.text) for CMU_ClockEnable
    bsp_acmp.o(.text) refers to em_acmp.o(.text) for ACMP_Init
    bsp_acmp.o(.text) refers to bsp_acmp.o(.constdata) for .constdata
    bsp_adc.o(.text) refers to em_cmu.o(.text) for CMU_ClockEnable
    bsp_adc.o(.text) refers to em_gpio.o(.text) for GPIO_PinModeSet
    bsp_adc.o(.text) refers to em_adc.o(.text) for ADC_Reset
    bsp_adc.o(.text) refers to bsp_adc.o(.constdata) for .constdata
    bsp_dac.o(.text) refers to em_cmu.o(.text) for CMU_ClockEnable
    bsp_dac.o(.text) refers to em_dac.o(.text) for DAC_PrescaleCalc
    bsp_dac.o(.text) refers to bsp_dac.o(.constdata) for .constdata
    bsp_dac.o(.text) refers to bsp_dac.o(.data) for Ch_Dac
    bsp_iic.o(.text) refers to memmovea.o(.text) for __aeabi_memcpy4
    bsp_iic.o(.text) refers to em_assert.o(.text) for assertEFM
    bsp_iic.o(.text) refers to em_cmu.o(.text) for CMU_ClockEnable
    bsp_iic.o(.text) refers to em_gpio.o(.text) for GPIO_PinModeSet
    bsp_iic.o(.text) refers to em_i2c.o(.text) for I2C_Init
    bsp_iic.o(.text) refers to bsp_power_ctrl.o(.text) for Bsp_Power_Operate
    bsp_iic.o(.text) refers to bsp_iic.o(.constdata) for .constdata
    bsp_iic.o(.text) refers to bsp_iic.o(.data) for powerStateEEprom
    bsp_key.o(.text) refers to em_cmu.o(.text) for CMU_ClockEnable
    bsp_key.o(.text) refers to em_gpio.o(.text) for GPIO_PinModeSet
    bsp_lcd.o(.text) refers to memmovea.o(.text) for __aeabi_memcpy4
    bsp_lcd.o(.text) refers to em_cmu.o(.text) for CMU_ClockEnable
    bsp_lcd.o(.text) refers to em_lcd.o(.text) for LCD_Init
    bsp_lcd.o(.text) refers to bsp_rtc.o(.text) for BSP_RTCGetTime
    bsp_lcd.o(.text) refers to dealwithchar.o(.text) for ByteBcdToHex
    bsp_lcd.o(.text) refers to bsp_lcd.o(.constdata) for .constdata
    bsp_led.o(.text) refers to em_cmu.o(.text) for CMU_ClockEnable
    bsp_led.o(.text) refers to em_gpio.o(.text) for GPIO_PinModeSet
    bsp_led.o(.text) refers to em_assert.o(.text) for assertEFM
    bsp_led.o(.text) refers to bsp_led.o(.constdata) for ledArray
    bsp_led.o(.text) refers to bsp_led.o(.data) for Bsp_LedTime
    bsp_power_ctrl.o(.text) refers to em_cmu.o(.text) for CMU_ClockEnable
    bsp_power_ctrl.o(.text) refers to em_gpio.o(.text) for GPIO_PinModeSet
    bsp_power_ctrl.o(.text) refers to bsp_power_ctrl.o(.constdata) for Bsp_Power_Array
    bsp_reedswitch.o(.text) refers to em_cmu.o(.text) for CMU_ClockEnable
    bsp_reedswitch.o(.text) refers to em_gpio.o(.text) for GPIO_PinModeSet
    bsp_rtc.o(.text) refers to dealwithchar.o(.text) for ByteBcdToHex
    bsp_rtc.o(.text) refers to em_cmu.o(.text) for CMU_ClockEnable
    bsp_rtc.o(.text) refers to em_rtc.o(.text) for RTC_Init
    bsp_rtc.o(.text) refers to bsp_rtc.o(.constdata) for BSP_Month_table
    bsp_rtc.o(.text) refers to bsp_rtc.o(.data) for BSP_Rtc_TimeCount
    bsp_spi.o(.text) refers to em_cmu.o(.text) for CMU_ClockEnable
    bsp_spi.o(.text) refers to memmovea.o(.text) for __aeabi_memcpy4
    bsp_spi.o(.text) refers to em_usart.o(.text) for USART_InitSync
    bsp_spi.o(.text) refers to em_gpio.o(.text) for GPIO_PinModeSet
    bsp_spi.o(.text) refers to bsp_spi.o(.constdata) for .constdata
    bsp_sx127x.o(.text) refers to em_assert.o(.text) for assertEFM
    bsp_sx127x.o(.text) refers to em_gpio.o(.text) for GPIO_PinModeSet
    bsp_sx127x.o(.text) refers to bsp_led.o(.text) for Bsp_Led_SetL
    bsp_sx127x.o(.text) refers to bsp_spi.o(.text) for SPI_SendRcvByte
    bsp_sx127x.o(.text) refers to em_cmu.o(.text) for CMU_ClockEnable
    bsp_test.o(.text) refers to bsp_uart.o(.text) for BSP_UART_Init
    bsp_test.o(.text) refers to app_m6310.o(.text) for App_Gprs_Set
    bsp_test.o(.text) refers to systick.o(.text) for Delay
    bsp_test.o(.text) refers to bsp_test.o(.bss) for gComRxBuff
    bsp_test.o(.text) refers to bsp_test.o(.data) for gComTxBuff
    bsp_timer.o(.text) refers to em_cmu.o(.text) for CMU_ClockEnable
    bsp_timer.o(.text) refers to em_timer.o(.text) for TIMER_Init
    bsp_timer.o(.text) refers to systick.o(.text) for Bsp_Timer_ISR
    bsp_timer.o(.text) refers to bsp_timer.o(.constdata) for .constdata
    bsp_uart.o(.text) refers to em_gpio.o(.text) for GPIO_PinModeSet
    bsp_uart.o(.text) refers to em_cmu.o(.text) for CMU_ClockEnable
    bsp_uart.o(.text) refers to em_leuart.o(.text) for LEUART_Reset
    bsp_uart.o(.text) refers to memmovea.o(.text) for __aeabi_memcpy4
    bsp_uart.o(.text) refers to em_usart.o(.text) for USART_InitAsync
    bsp_uart.o(.text) refers to bsp_uart.o(.data) for BSP_UART1
    bsp_uart.o(.text) refers to bsp_uart.o(.constdata) for .constdata
    bsp_uart.o(.text) refers to memseta.o(.text) for __aeabi_memclr
    bsp_uart.o(.data) refers to bsp_uart.o(.bss) for StructUART
    bsp_vcmp.o(.text) refers to memmovea.o(.text) for __aeabi_memcpy4
    bsp_vcmp.o(.text) refers to em_vcmp.o(.text) for VCMP_Init
    bsp_vcmp.o(.text) refers to bsp_vcmp.o(.constdata) for .constdata
    bsp_wdt.o(.text) refers to em_wdog.o(.text) for WDOG_Init
    bsp_wdt.o(.text) refers to bsp_wdt.o(.constdata) for .constdata
    sx1276-hal.o(.text) refers to systick.o(.text) for DelayMs
    sx1276-hal.o(.text) refers to bsp_sx127x.o(.text) for RST_RF_Pin_Control
    dealwithchar.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dealwithchar.o(.text) refers to uldiv.o(.text) for __aeabi_uldivmod
    dealwithchar.o(.text) refers to dealwithchar.o(.constdata) for Base
    dealwithchar.o(.text) refers to fmul.o(.text) for __aeabi_fmul
    dealwithchar.o(.text) refers to fdiv.o(.text) for __aeabi_fdiv
    dealwithchar.o(.text) refers to fadd.o(.text) for __aeabi_fadd
    dealwithchar.o(.text) refers to ffixui.o(.text) for __aeabi_f2uiz
    dealwithchar.o(.text) refers to ffltui.o(.text) for __aeabi_ui2f
    app_m6310.o(.text) refers to em_assert.o(.text) for assertEFM
    app_m6310.o(.text) refers to bsp_uart.o(.text) for BSP_UART_Init
    app_m6310.o(.text) refers to em_gpio.o(.text) for GPIO_PinModeSet
    app_m6310.o(.text) refers to systick.o(.text) for Delay
    app_m6310.o(.text) refers to bsp_power_ctrl.o(.text) for Bsp_Power_Operate
    app_m6310.o(.text) refers to strlen.o(.text) for strlen
    app_m6310.o(.text) refers to strstr.o(.text) for strstr
    app_m6310.o(.text) refers to printf6.o(i.__0sprintf$6) for __2sprintf
    app_m6310.o(.text) refers to app_para.o(.text) for GWPara_function
    app_m6310.o(.text) refers to app_nl.o(.text) for App_NL_Receive
    app_m6310.o(.text) refers to app_m6310.o(.bss) for App_NeoM6310_Usart_Str
    app_m6310.o(.text) refers to app_m6310.o(.data) for App_AT_TCPSETUP_Buff
    app_m6310.o(.text) refers to bsp_led.o(.text) for Bsp_Led_SetL
    app_agr.o(.text) refers to bsp_uart.o(.text) for BSP_UART_Init
    app_agr.o(.text) refers to app_para.o(.text) for GWPara_function
    app_agr.o(.text) refers to memseta.o(.text) for __aeabi_memset
    app_agr.o(.text) refers to memcmp.o(.text) for memcmp
    app_agr.o(.text) refers to dealwithchar.o(.text) for TwoByteBcdToHex
    app_agr.o(.text) refers to app_agr_makeframe.o(.text) for App_Agr_MakeFrame
    app_agr.o(.text) refers to systick.o(.text) for DelayMs
    app_agr.o(.text) refers to memmovea.o(.text) for __aeabi_memcpy
    app_agr.o(.text) refers to app_agr.o(.bss) for App_Agr_Buff_Rx
    app_agr.o(.text) refers to app_para.o(.data) for TerAddress
    app_agr.o(.text) refers to app_agr.o(.constdata) for Para_Mapping_Table
    app_agr.o(.text) refers to app_agr.o(.data) for App_Agr_TimeOutMs
    app_para.o(.text) refers to bsp_iic.o(.text) for Bsp_EEPROM_Write
    app_para.o(.text) refers to bsp_rtc.o(.text) for BSP_RTCSetTime
    app_para.o(.text) refers to app_para.o(.data) for CommunictionParaFlag
    app_para.o(.text) refers to app_para.o(.constdata) for Ver_Data
    app_para.o(.text) refers to memmovea.o(.text) for __aeabi_memmove
    app_para.o(.text) refers to memseta.o(.text) for __aeabi_memclr4
    app_agr_func.o(.text) refers to app_para.o(.text) for GWPara_function
    app_agr_makeframe.o(.text) refers to memmovea.o(.text) for __aeabi_memcpy
    app_agr_makeframe.o(.text) refers to bsp_uart.o(.text) for BSP_UART_Write
    app_agr_makeframe.o(.text) refers to app_agr_makeframe.o(.constdata) for auchCRCHi
    app_agr_makeframe.o(.text) refers to app_agr_makeframe.o(.bss) for App_Frame_Buff
    app_data.o(.text) refers to app_para.o(.text) for GWPara_function
    app_data.o(.text) refers to bsp_iic.o(.text) for Bsp_EEPROM_Write
    app_data.o(.text) refers to bsp_rtc.o(.text) for BSP_RTCGetTime
    app_data.o(.text) refers to dealwithchar.o(.text) for App_DataBcdIsOK
    app_data.o(.text) refers to memseta.o(.text) for __aeabi_memclr4
    app_data.o(.text) refers to app_data.o(.constdata) for OneData_Sampling_Table
    app_485rn.o(.text) refers to bsp_uart.o(.text) for BSP_UART_ClearRxBuff
    app_485rn.o(.text) refers to bsp_power_ctrl.o(.text) for Bsp_Power_Operate
    app_485rn.o(.text) refers to app_para.o(.text) for GWPara_function
    app_485rn.o(.text) refers to em_gpio.o(.text) for GPIO_PinModeSet
    app_485rn.o(.text) refers to memmovea.o(.text) for __aeabi_memcpy
    app_485rn.o(.text) refers to app_data.o(.text) for GWFirstData_function
    app_485rn.o(.text) refers to app_485rn.o(.bss) for App_485_RXTXBuff
    app_485rn.o(.text) refers to app_485rn.o(.data) for ReedDataFrame
    app_485rn.o(.text) refers to systick.o(.text) for SysGetKeyIntFlag
    app_485rn.o(.text) refers to bsp_led.o(.text) for Bsp_Led_SetH
    app_485rn.o(.text) refers to app_nl.o(.text) for App_NL_Receive
    app_nl.o(.text) refers to bsp_uart.o(.text) for BSP_UART_ClearRxBuff
    app_nl.o(.text) refers to app_para.o(.text) for GWPara_function
    app_nl.o(.text) refers to memseta.o(.text) for __aeabi_memclr4
    app_nl.o(.text) refers to bsp_rtc.o(.text) for BSP_RTCSetTime
    app_nl.o(.text) refers to bsp_wdt.o(.text) for Bsp_Wdt_Init
    app_nl.o(.text) refers to bsp_led.o(.text) for Bsp_Led_SetH
    app_nl.o(.text) refers to app_data.o(.text) for Reset_ONEDATA_Function
    app_nl.o(.text) refers to memmovea.o(.text) for __aeabi_memcpy
    app_nl.o(.text) refers to systick.o(.data) for SW_Version
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    printfb.o(i.__0fprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0fprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0printf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0printf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0snprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0sprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printfb.o(i.__0vfprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vfprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vprintf$bare) refers to fputc.o(i.fputc) for fputc
    printfb.o(i.__0vprintf$bare) refers to stdout.o(.data) for __stdout
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsnprintf$bare) refers to printfb.o(i._snputc) for _snputc
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._printf_core) for _printf_core
    printfb.o(i.__0vsprintf$bare) refers to printfb.o(i._sputc) for _sputc
    printf0.o(i.__0fprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0fprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0printf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0printf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0snprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0sprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf0.o(i.__0vfprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vfprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vprintf$0) refers to fputc.o(i.fputc) for fputc
    printf0.o(i.__0vprintf$0) refers to stdout.o(.data) for __stdout
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsnprintf$0) refers to printf0.o(i._snputc) for _snputc
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._printf_core) for _printf_core
    printf0.o(i.__0vsprintf$0) refers to printf0.o(i._sputc) for _sputc
    printf1.o(i.__0fprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0fprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0printf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0printf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0snprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0sprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i.__0vfprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vfprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vprintf$1) refers to fputc.o(i.fputc) for fputc
    printf1.o(i.__0vprintf$1) refers to stdout.o(.data) for __stdout
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsnprintf$1) refers to printf1.o(i._snputc) for _snputc
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._printf_core) for _printf_core
    printf1.o(i.__0vsprintf$1) refers to printf1.o(i._sputc) for _sputc
    printf1.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf2.o(i.__0fprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0fprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0printf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0printf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0snprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0sprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf2.o(i.__0vfprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vfprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vprintf$2) refers to fputc.o(i.fputc) for fputc
    printf2.o(i.__0vprintf$2) refers to stdout.o(.data) for __stdout
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsnprintf$2) refers to printf2.o(i._snputc) for _snputc
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._printf_core) for _printf_core
    printf2.o(i.__0vsprintf$2) refers to printf2.o(i._sputc) for _sputc
    printf3.o(i.__0fprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0fprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0printf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0printf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0snprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0sprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i.__0vfprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vfprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vprintf$3) refers to fputc.o(i.fputc) for fputc
    printf3.o(i.__0vprintf$3) refers to stdout.o(.data) for __stdout
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsnprintf$3) refers to printf3.o(i._snputc) for _snputc
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._printf_core) for _printf_core
    printf3.o(i.__0vsprintf$3) refers to printf3.o(i._sputc) for _sputc
    printf3.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf4.o(i.__0fprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0fprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0printf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0printf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0snprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0sprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i.__0vfprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vfprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vprintf$4) refers to fputc.o(i.fputc) for fputc
    printf4.o(i.__0vprintf$4) refers to stdout.o(.data) for __stdout
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsnprintf$4) refers to printf4.o(i._snputc) for _snputc
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._printf_core) for _printf_core
    printf4.o(i.__0vsprintf$4) refers to printf4.o(i._sputc) for _sputc
    printf4.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf5.o(i.__0fprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0fprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0printf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0printf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0snprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0sprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i.__0vfprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vfprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vprintf$5) refers to fputc.o(i.fputc) for fputc
    printf5.o(i.__0vprintf$5) refers to stdout.o(.data) for __stdout
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsnprintf$5) refers to printf5.o(i._snputc) for _snputc
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._printf_core) for _printf_core
    printf5.o(i.__0vsprintf$5) refers to printf5.o(i._sputc) for _sputc
    printf5.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf6.o(i.__0fprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0fprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0printf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0printf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0snprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0sprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i.__0vfprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vfprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vprintf$6) refers to fputc.o(i.fputc) for fputc
    printf6.o(i.__0vprintf$6) refers to stdout.o(.data) for __stdout
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsnprintf$6) refers to printf6.o(i._snputc) for _snputc
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._printf_core) for _printf_core
    printf6.o(i.__0vsprintf$6) refers to printf6.o(i._sputc) for _sputc
    printf6.o(i._printf_core) refers to printf6.o(i._printf_pre_padding) for _printf_pre_padding
    printf6.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printf6.o(i._printf_core) refers to printf6.o(i._printf_post_padding) for _printf_post_padding
    printf7.o(i.__0fprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0fprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0printf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0printf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0snprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0sprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i.__0vfprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vfprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vprintf$7) refers to fputc.o(i.fputc) for fputc
    printf7.o(i.__0vprintf$7) refers to stdout.o(.data) for __stdout
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsnprintf$7) refers to printf7.o(i._snputc) for _snputc
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._printf_core) for _printf_core
    printf7.o(i.__0vsprintf$7) refers to printf7.o(i._sputc) for _sputc
    printf7.o(i._printf_core) refers to printf7.o(i._printf_pre_padding) for _printf_pre_padding
    printf7.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf7.o(i._printf_core) refers to printf7.o(i._printf_post_padding) for _printf_post_padding
    printf8.o(i.__0fprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0fprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0printf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0printf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0snprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0sprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i.__0vfprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vfprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vprintf$8) refers to fputc.o(i.fputc) for fputc
    printf8.o(i.__0vprintf$8) refers to stdout.o(.data) for __stdout
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsnprintf$8) refers to printf8.o(i._snputc) for _snputc
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._printf_core) for _printf_core
    printf8.o(i.__0vsprintf$8) refers to printf8.o(i._sputc) for _sputc
    printf8.o(i._printf_core) refers to printf8.o(i._printf_pre_padding) for _printf_pre_padding
    printf8.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printf8.o(i._printf_core) refers to printf8.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i.__0fprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0fprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0fprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0printf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0printf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0printf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0snprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0snprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0snprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0sprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0sprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0sprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i.__0vfprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vfprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vfprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vprintf) refers to fputc.o(i.fputc) for fputc
    printfa.o(i.__0vprintf) refers to stdout.o(.data) for __stdout
    printfa.o(i.__0vsnprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsnprintf) refers to printfa.o(i._snputc) for _snputc
    printfa.o(i.__0vsprintf) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i.__0vsprintf) refers to printfa.o(i._printf_core) for _printf_core
    printfa.o(i.__0vsprintf) refers to printfa.o(i._sputc) for _sputc
    printfa.o(i._fp_digits) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._fp_digits) refers to dmul.o(.text) for __aeabi_dmul
    printfa.o(i._fp_digits) refers to ddiv.o(.text) for __aeabi_ddiv
    printfa.o(i._fp_digits) refers to cdrcmple.o(.text) for __aeabi_cdrcmple
    printfa.o(i._fp_digits) refers to dadd.o(.text) for __aeabi_dadd
    printfa.o(i._fp_digits) refers to dfixul.o(.text) for __aeabi_d2ulz
    printfa.o(i._fp_digits) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_core) refers to printfa.o(i._printf_pre_padding) for _printf_pre_padding
    printfa.o(i._printf_core) refers to uldiv.o(.text) for __aeabi_uldivmod
    printfa.o(i._printf_core) refers to printfa.o(i._printf_post_padding) for _printf_post_padding
    printfa.o(i._printf_core) refers to printfa.o(i._fp_digits) for _fp_digits
    printfa.o(i._printf_core) refers to uidiv.o(.text) for __aeabi_uidivmod
    printfa.o(i._printf_post_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._printf_pre_padding) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._snputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    printfa.o(i._sputc) refers (Special) to iusefp.o(.text) for __I$use$fp
    fadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fadd.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    fmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    fdiv.o(.text) refers to fepilogue.o(.text) for _float_round
    ffltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ffltui.o(.text) refers to fepilogue.o(.text) for _float_epilogue
    ffixui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_efm32tg.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_efm32tg.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text) for main
    fputc.o(i.fputc) refers (Special) to iusesemip.o(.text) for __I$use$semihosting$fputc
    fputc.o(i.fputc) refers (Special) to semi.o(.text) for __semihosting_library_function
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfixul.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    dfixul.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr


==============================================================================

Removing Unused input sections from the image.

    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing startup_efm32tg.o(HEAP), (3072 bytes).
    Removing systick.o(.rev16_text), (4 bytes).
    Removing systick.o(.revsh_text), (4 bytes).
    Removing system_efm32tg.o(.rev16_text), (4 bytes).
    Removing system_efm32tg.o(.revsh_text), (4 bytes).
    Removing em_acmp.o(.rev16_text), (4 bytes).
    Removing em_acmp.o(.revsh_text), (4 bytes).
    Removing em_acmp.o(.text), (500 bytes).
    Removing em_adc.o(.rev16_text), (4 bytes).
    Removing em_adc.o(.revsh_text), (4 bytes).
    Removing em_adc.o(.text), (880 bytes).
    Removing em_cmu.o(.rev16_text), (4 bytes).
    Removing em_cmu.o(.revsh_text), (4 bytes).
    Removing em_dac.o(.rev16_text), (4 bytes).
    Removing em_dac.o(.revsh_text), (4 bytes).
    Removing em_dac.o(.text), (560 bytes).
    Removing em_dbg.o(.rev16_text), (4 bytes).
    Removing em_dbg.o(.revsh_text), (4 bytes).
    Removing em_dbg.o(.text), (164 bytes).
    Removing em_dma.o(.rev16_text), (4 bytes).
    Removing em_dma.o(.revsh_text), (4 bytes).
    Removing em_emu.o(.rev16_text), (4 bytes).
    Removing em_emu.o(.revsh_text), (4 bytes).
    Removing em_gpio.o(.rev16_text), (4 bytes).
    Removing em_gpio.o(.revsh_text), (4 bytes).
    Removing em_i2c.o(.rev16_text), (4 bytes).
    Removing em_i2c.o(.revsh_text), (4 bytes).
    Removing em_int.o(.rev16_text), (4 bytes).
    Removing em_int.o(.revsh_text), (4 bytes).
    Removing em_int.o(.data), (4 bytes).
    Removing em_lcd.o(.rev16_text), (4 bytes).
    Removing em_lcd.o(.revsh_text), (4 bytes).
    Removing em_lcd.o(.text), (1084 bytes).
    Removing em_letimer.o(.rev16_text), (4 bytes).
    Removing em_letimer.o(.revsh_text), (4 bytes).
    Removing em_letimer.o(.text), (512 bytes).
    Removing em_leuart.o(.rev16_text), (4 bytes).
    Removing em_leuart.o(.revsh_text), (4 bytes).
    Removing em_mpu.o(.rev16_text), (4 bytes).
    Removing em_mpu.o(.revsh_text), (4 bytes).
    Removing em_msc.o(.rev16_text), (4 bytes).
    Removing em_msc.o(.revsh_text), (4 bytes).
    Removing em_msc.o(.text), (160 bytes).
    Removing em_msc.o(ram_code), (816 bytes).
    Removing em_prs.o(.rev16_text), (4 bytes).
    Removing em_prs.o(.revsh_text), (4 bytes).
    Removing em_prs.o(.text), (120 bytes).
    Removing em_rmu.o(.rev16_text), (4 bytes).
    Removing em_rmu.o(.revsh_text), (4 bytes).
    Removing em_rmu.o(.text), (168 bytes).
    Removing em_rmu.o(.constdata), (88 bytes).
    Removing em_rtc.o(.rev16_text), (4 bytes).
    Removing em_rtc.o(.revsh_text), (4 bytes).
    Removing em_system.o(.rev16_text), (4 bytes).
    Removing em_system.o(.revsh_text), (4 bytes).
    Removing em_system.o(.text), (164 bytes).
    Removing em_timer.o(.rev16_text), (4 bytes).
    Removing em_timer.o(.revsh_text), (4 bytes).
    Removing em_usart.o(.rev16_text), (4 bytes).
    Removing em_usart.o(.revsh_text), (4 bytes).
    Removing em_vcmp.o(.rev16_text), (4 bytes).
    Removing em_vcmp.o(.revsh_text), (4 bytes).
    Removing em_vcmp.o(.text), (476 bytes).
    Removing em_wdog.o(.rev16_text), (4 bytes).
    Removing em_wdog.o(.revsh_text), (4 bytes).
    Removing bsp_acmp.o(.rev16_text), (4 bytes).
    Removing bsp_acmp.o(.revsh_text), (4 bytes).
    Removing bsp_acmp.o(.text), (168 bytes).
    Removing bsp_acmp.o(.constdata), (24 bytes).
    Removing bsp_adc.o(.rev16_text), (4 bytes).
    Removing bsp_adc.o(.revsh_text), (4 bytes).
    Removing bsp_adc.o(.text), (280 bytes).
    Removing bsp_adc.o(.constdata), (6 bytes).
    Removing bsp_dac.o(.rev16_text), (4 bytes).
    Removing bsp_dac.o(.revsh_text), (4 bytes).
    Removing bsp_dac.o(.text), (184 bytes).
    Removing bsp_dac.o(.constdata), (10 bytes).
    Removing bsp_dac.o(.data), (8 bytes).
    Removing bsp_iic.o(.rev16_text), (4 bytes).
    Removing bsp_iic.o(.revsh_text), (4 bytes).
    Removing bsp_key.o(.rev16_text), (4 bytes).
    Removing bsp_key.o(.revsh_text), (4 bytes).
    Removing bsp_lcd.o(.rev16_text), (4 bytes).
    Removing bsp_lcd.o(.revsh_text), (4 bytes).
    Removing bsp_lcd.o(.text), (2412 bytes).
    Removing bsp_lcd.o(.constdata), (196 bytes).
    Removing bsp_led.o(.rev16_text), (4 bytes).
    Removing bsp_led.o(.revsh_text), (4 bytes).
    Removing bsp_power_ctrl.o(.rev16_text), (4 bytes).
    Removing bsp_power_ctrl.o(.revsh_text), (4 bytes).
    Removing bsp_reedswitch.o(.rev16_text), (4 bytes).
    Removing bsp_reedswitch.o(.revsh_text), (4 bytes).
    Removing bsp_reedswitch.o(.text), (76 bytes).
    Removing bsp_rtc.o(.rev16_text), (4 bytes).
    Removing bsp_rtc.o(.revsh_text), (4 bytes).
    Removing bsp_spi.o(.rev16_text), (4 bytes).
    Removing bsp_spi.o(.revsh_text), (4 bytes).
    Removing bsp_spi.o(.text), (180 bytes).
    Removing bsp_spi.o(.constdata), (24 bytes).
    Removing bsp_sx127x.o(.rev16_text), (4 bytes).
    Removing bsp_sx127x.o(.revsh_text), (4 bytes).
    Removing bsp_sx127x.o(.text), (488 bytes).
    Removing bsp_test.o(.rev16_text), (4 bytes).
    Removing bsp_test.o(.revsh_text), (4 bytes).
    Removing bsp_timer.o(.rev16_text), (4 bytes).
    Removing bsp_timer.o(.revsh_text), (4 bytes).
    Removing bsp_uart.o(.rev16_text), (4 bytes).
    Removing bsp_uart.o(.revsh_text), (4 bytes).
    Removing bsp_vcmp.o(.rev16_text), (4 bytes).
    Removing bsp_vcmp.o(.revsh_text), (4 bytes).
    Removing bsp_vcmp.o(.text), (140 bytes).
    Removing bsp_vcmp.o(.constdata), (28 bytes).
    Removing bsp_wdt.o(.rev16_text), (4 bytes).
    Removing bsp_wdt.o(.revsh_text), (4 bytes).
    Removing sx1276-hal.o(.rev16_text), (4 bytes).
    Removing sx1276-hal.o(.revsh_text), (4 bytes).
    Removing sx1276-hal.o(.text), (226 bytes).
    Removing sx1276-hal.o(.bss), (224 bytes).
    Removing dealwithchar.o(.rev16_text), (4 bytes).
    Removing dealwithchar.o(.revsh_text), (4 bytes).
    Removing app_m6310.o(.rev16_text), (4 bytes).
    Removing app_m6310.o(.revsh_text), (4 bytes).
    Removing app_agr.o(.rev16_text), (4 bytes).
    Removing app_agr.o(.revsh_text), (4 bytes).
    Removing app_para.o(.rev16_text), (4 bytes).
    Removing app_para.o(.revsh_text), (4 bytes).
    Removing app_agr_func.o(.rev16_text), (4 bytes).
    Removing app_agr_func.o(.revsh_text), (4 bytes).
    Removing app_agr_func.o(.text), (74 bytes).
    Removing app_agr_func.o(.data), (1 bytes).
    Removing app_agr_makeframe.o(.rev16_text), (4 bytes).
    Removing app_agr_makeframe.o(.revsh_text), (4 bytes).
    Removing app_data.o(.rev16_text), (4 bytes).
    Removing app_data.o(.revsh_text), (4 bytes).
    Removing app_485rn.o(.rev16_text), (4 bytes).
    Removing app_485rn.o(.revsh_text), (4 bytes).
    Removing app_rtc.o(.rev16_text), (4 bytes).
    Removing app_rtc.o(.revsh_text), (4 bytes).
    Removing app_rtc.o(.text), (2 bytes).
    Removing app_nl.o(.rev16_text), (4 bytes).
    Removing app_nl.o(.revsh_text), (4 bytes).
    Removing dadd.o(.text), (334 bytes).
    Removing dmul.o(.text), (228 bytes).
    Removing ddiv.o(.text), (222 bytes).
    Removing dfixul.o(.text), (48 bytes).
    Removing cdrcmple.o(.text), (48 bytes).
    Removing depilogue.o(.text), (186 bytes).

149 unused section(s) (total 15017 bytes) removed from the image.

==============================================================================

Memory Map of the image

  Image Entry point : 0x0000009d

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00007d28, Max: 0x00008000, ABSOLUTE, COMPRESSED[0x00007c40])

    Execution Region ER_IROM1 (Base: 0x00000000, Size: 0x00007bb4, Max: 0x00008000, ABSOLUTE)

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x0000009c   Data   RO          271    RESET               startup_efm32tg.o
    0x0000009c   0x00000000   Code   RO         1875  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x0000009c   0x00000004   Code   RO         2169    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x000000a0   0x00000004   Code   RO         2172    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x000000a4   0x00000000   Code   RO         2174    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x000000a4   0x00000000   Code   RO         2176    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x000000a4   0x00000008   Code   RO         2177    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x000000ac   0x00000000   Code   RO         2179    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x000000ac   0x00000000   Code   RO         2181    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x000000ac   0x00000004   Code   RO         2170    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x000000b0   0x000001d4   Code   RO            3    .text               main.o
    0x00000284   0x00000024   Code   RO          272    .text               startup_efm32tg.o
    0x000002a8   0x00000214   Code   RO          278    .text               systick.o
    0x000004bc   0x00000134   Code   RO          461    .text               system_efm32tg.o
    0x000005f0   0x00000004   Code   RO          535    .text               em_assert.o
    0x000005f4   0x00000d90   Code   RO          549    .text               em_cmu.o
    0x00001384   0x0000070c   Code   RO          621    .text               em_dma.o
    0x00001a90   0x000002a0   Code   RO          652    .text               em_emu.o
    0x00001d30   0x000001f0   Code   RO          684    .text               em_gpio.o
    0x00001f20   0x000004b4   Code   RO          704    .text               em_i2c.o
    0x000023d4   0x00000288   Code   RO          793    .text               em_leuart.o
    0x0000265c   0x000000f4   Code   RO          917    .text               em_rtc.o
    0x00002750   0x000001bc   Code   RO          957    .text               em_timer.o
    0x0000290c   0x000004e0   Code   RO          980    .text               em_usart.o
    0x00002dec   0x000000f0   Code   RO         1023    .text               em_wdog.o
    0x00002edc   0x000002f4   Code   RO         1127    .text               bsp_iic.o
    0x000031d0   0x00000060   Code   RO         1155    .text               bsp_key.o
    0x00003230   0x00000200   Code   RO         1211    .text               bsp_led.o
    0x00003430   0x00000070   Code   RO         1238    .text               bsp_power_ctrl.o
    0x000034a0   0x00000348   Code   RO         1288    .text               bsp_rtc.o
    0x000037e8   0x0000005c   Code   RO         1368    .text               bsp_test.o
    0x00003844   0x0000006c   Code   RO         1421    .text               bsp_timer.o
    0x000038b0   0x000007e4   Code   RO         1445    .text               bsp_uart.o
    0x00004094   0x00000038   Code   RO         1504    .text               bsp_wdt.o
    0x000040cc   0x0000091c   Code   RO         1557    .text               dealwithchar.o
    0x000049e8   0x00000918   Code   RO         1586    .text               app_m6310.o
    0x00005300   0x000003e0   Code   RO         1644    .text               app_agr.o
    0x000056e0   0x00000568   Code   RO         1696    .text               app_para.o
    0x00005c48   0x000000d4   Code   RO         1759    .text               app_agr_makeframe.o
    0x00005d1c   0x00000344   Code   RO         1783    .text               app_data.o
    0x00006060   0x000005b8   Code   RO         1806    .text               app_485rn.o
    0x00006618   0x0000094a   Code   RO         1857    .text               app_nl.o
    0x00006f62   0x00000062   Code   RO         1878    .text               mc_w.l(uldiv.o)
    0x00006fc4   0x0000001e   Code   RO         1880    .text               mc_w.l(llshl.o)
    0x00006fe2   0x00000040   Code   RO         1884    .text               mc_w.l(memmovea.o)
    0x00007022   0x00000024   Code   RO         1886    .text               mc_w.l(memseta.o)
    0x00007046   0x00000024   Code   RO         1888    .text               mc_w.l(strstr.o)
    0x0000706a   0x0000000e   Code   RO         1890    .text               mc_w.l(strlen.o)
    0x00007078   0x0000001a   Code   RO         1892    .text               mc_w.l(memcmp.o)
    0x00007092   0x000000b0   Code   RO         2159    .text               mf_w.l(fadd.o)
    0x00007142   0x00000064   Code   RO         2161    .text               mf_w.l(fmul.o)
    0x000071a6   0x0000007c   Code   RO         2163    .text               mf_w.l(fdiv.o)
    0x00007222   0x0000000a   Code   RO         2165    .text               mf_w.l(ffltui.o)
    0x0000722c   0x00000028   Code   RO         2167    .text               mf_w.l(ffixui.o)
    0x00007254   0x0000002c   Code   RO         2186    .text               mc_w.l(uidiv.o)
    0x00007280   0x00000020   Code   RO         2188    .text               mc_w.l(llushr.o)
    0x000072a0   0x00000000   Code   RO         2190    .text               mc_w.l(iusefp.o)
    0x000072a0   0x0000006e   Code   RO         2191    .text               mf_w.l(fepilogue.o)
    0x0000730e   0x00000002   PAD
    0x00007310   0x00000024   Code   RO         2203    .text               mc_w.l(init.o)
    0x00007334   0x00000056   Code   RO         2219    .text               mc_w.l(__dczerorl2.o)
    0x0000738a   0x00000002   PAD
    0x0000738c   0x00000028   Code   RO         2055    i.__0sprintf$6      mc_w.l(printf6.o)
    0x000073b4   0x0000000e   Code   RO         2213    i.__scatterload_copy  mc_w.l(handlers.o)
    0x000073c2   0x00000002   Code   RO         2214    i.__scatterload_null  mc_w.l(handlers.o)
    0x000073c4   0x0000000e   Code   RO         2215    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x000073d2   0x00000002   PAD
    0x000073d4   0x000002f0   Code   RO         2060    i._printf_core      mc_w.l(printf6.o)
    0x000076c4   0x00000024   Code   RO         2061    i._printf_post_padding  mc_w.l(printf6.o)
    0x000076e8   0x0000002e   Code   RO         2062    i._printf_pre_padding  mc_w.l(printf6.o)
    0x00007716   0x0000000a   Code   RO         2064    i._sputc            mc_w.l(printf6.o)
    0x00007720   0x00000004   Data   RO          706    .constdata          em_i2c.o
    0x00007724   0x00000018   Data   RO         1128    .constdata          bsp_iic.o
    0x0000773c   0x00000020   Data   RO         1212    .constdata          bsp_led.o
    0x0000775c   0x00000018   Data   RO         1239    .constdata          bsp_power_ctrl.o
    0x00007774   0x00000017   Data   RO         1289    .constdata          bsp_rtc.o
    0x0000778b   0x00000001   PAD
    0x0000778c   0x0000000d   Data   RO         1422    .constdata          bsp_timer.o
    0x00007799   0x00000003   PAD
    0x0000779c   0x00000040   Data   RO         1447    .constdata          bsp_uart.o
    0x000077dc   0x00000009   Data   RO         1505    .constdata          bsp_wdt.o
    0x000077e5   0x00000003   PAD
    0x000077e8   0x00000028   Data   RO         1558    .constdata          dealwithchar.o
    0x00007810   0x00000048   Data   RO         1646    .constdata          app_agr.o
    0x00007858   0x0000010b   Data   RO         1697    .constdata          app_para.o
    0x00007963   0x00000200   Data   RO         1761    .constdata          app_agr_makeframe.o
    0x00007b63   0x00000001   PAD
    0x00007b64   0x00000030   Data   RO         1784    .constdata          app_data.o
    0x00007b94   0x00000020   Data   RO         2211    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Base: 0x20000000, Size: 0x00000cf0, Max: 0x00001000, ABSOLUTE, COMPRESSED[0x0000008c])

    Base Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00000020   Data   RW          279    .data               systick.o
    0x20000020   0x0000000c   Data   RW          462    .data               system_efm32tg.o
    0x2000002c   0x00000004   Data   RW          653    .data               em_emu.o
    0x20000030   0x00000001   Data   RW         1129    .data               bsp_iic.o
    0x20000031   0x00000004   Data   RW         1213    .data               bsp_led.o
    0x20000035   0x00000003   PAD
    0x20000038   0x00000004   Data   RW         1290    .data               bsp_rtc.o
    0x2000003c   0x00000080   Data   RW         1370    .data               bsp_test.o
    0x200000bc   0x00000010   Data   RW         1448    .data               bsp_uart.o
    0x200000cc   0x0000007b   Data   RW         1588    .data               app_m6310.o
    0x20000147   0x00000001   PAD
    0x20000148   0x00000006   Data   RW         1647    .data               app_agr.o
    0x2000014e   0x0000000f   Data   RW         1698    .data               app_para.o
    0x2000015d   0x00000014   Data   RW         1808    .data               app_485rn.o
    0x20000171   0x00000003   PAD
    0x20000174   0x0000000c   Zero   RW          705    .bss                em_i2c.o
    0x20000180   0x00000078   Zero   RW         1369    .bss                bsp_test.o
    0x200001f8   0x000001dc   Zero   RW         1446    .bss                bsp_uart.o
    0x200003d4   0x00000140   Zero   RW         1587    .bss                app_m6310.o
    0x20000514   0x0000020a   Zero   RW         1645    .bss                app_agr.o
    0x2000071e   0x000000fa   Zero   RW         1760    .bss                app_agr_makeframe.o
    0x20000818   0x000000d8   Zero   RW         1807    .bss                app_485rn.o
    0x200008f0   0x00000400   Zero   RW          269    STACK               startup_efm32tg.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      1464         28          0         20        216       7280   app_485rn.o
       992         26         72          6        522       5314   app_agr.o
       212         14        512          0        250       1803   app_agr_makeframe.o
       836         10         48          0          0       5067   app_data.o
      2328        124          0        123        320      17585   app_m6310.o
      2378         16          0          0          0       4834   app_nl.o
      1384         36        267         15          0       8550   app_para.o
         0          0          0          0          0       2452   bsp_acmp.o
       756         72         24          1          0       6908   bsp_iic.o
        96         12          0          0          0      22523   bsp_key.o
       512         44         32          4          0       5326   bsp_led.o
       112         12         24          0          0       1274   bsp_power_ctrl.o
         0          0          0          0          0      21891   bsp_reedswitch.o
       840         42         23          4          0       4154   bsp_rtc.o
        92          8          0        128        120       3124   bsp_test.o
       108         12         13          0          0       4317   bsp_timer.o
      2020         88         64         16        476       9706   bsp_uart.o
        56         10          9          0          0        584   bsp_wdt.o
      2332         52         40          0          0      14380   dealwithchar.o
         0          0          0          0          0        612   em_acmp.o
         4          0          0          0          0        460   em_assert.o
      3472        178          0          0          0      10307   em_cmu.o
         0          0          0          0          0        680   em_dbg.o
      1804         66          0          0          0      30288   em_dma.o
       672         30          0          4          0       8355   em_emu.o
       496         34          0          0          0       1823   em_gpio.o
      1204         70          4          0         12       4556   em_i2c.o
       648         36          0          0          0       5569   em_leuart.o
       244         30          0          0          0       2308   em_rtc.o
       444         34          0          0          0       4986   em_timer.o
      1248         40          0          0          0       6296   em_usart.o
       240          4          0          0          0       1708   em_wdog.o
       468         32          0          0          0     176228   main.o
        36          8        156          0       1024        792   startup_efm32tg.o
       308         52          0         12          0       2984   system_efm32tg.o
       532         60          0         32          0     143187   systick.o

    ----------------------------------------------------------------------
     28338       1280       1328        372       2940     548211   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         0          0          8          7          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

        86          0          0          0          0          0   __dczerorl2.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        30          0          0          0          0         68   llshl.o
        32          0          0          0          0         68   llushr.o
        26          0          0          0          0         80   memcmp.o
        64          0          0          0          0         76   memmovea.o
        36          0          0          0          0        108   memseta.o
       884         10          0          0          0        420   printf6.o
        14          0          0          0          0         68   strlen.o
        36          0          0          0          0         80   strstr.o
        44          0          0          0          0         80   uidiv.o
        98          0          0          0          0         92   uldiv.o
       176          0          0          0          0        140   fadd.o
       124          0          0          0          0         88   fdiv.o
       110          0          0          0          0        168   fepilogue.o
        40          0          0          0          0         68   ffixui.o
        10          0          0          0          0         68   ffltui.o
       100          0          0          0          0         76   fmul.o

    ----------------------------------------------------------------------
      2002         26          0          0          0       1816   Library Totals
         6          0          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      1436         26          0          0          0       1208   mc_w.l
       560          0          0          0          0        608   mf_w.l

    ----------------------------------------------------------------------
      2002         26          0          0          0       1816   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     30340       1306       1328        372       2940     546255   Grand Totals
     30340       1306       1328        140       2940     546255   ELF Image Totals (compressed)
     30340       1306       1328        140          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                31668 (  30.93kB)
    Total RW  Size (RW Data + ZI Data)              3312 (   3.23kB)
    Total ROM Size (Code + RO Data + RW Data)      31808 (  31.06kB)

==============================================================================

